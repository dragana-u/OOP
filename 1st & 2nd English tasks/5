//Create a structure Player with the following information:
//name (array of max 15 characters)
//current level (integer)
//points (integer).
//Then create a structure ComputerGame with:
//name of the game (array of max 20 characters)
//array of players (maximum 30 players)
//number of players (integer).
//Implement a function with the function signature:
//void bestPlayer(computerGame *array, int n)
//This function should print the name of the player which plays the most popular
//game (with the greatest number of players playing it). The best player has the most points.
//If there are more players with the same number of points, the best one is the player which reached the highest level.
//The printing is in the form: “The best player XXXXXX plays the game YYYYYY”, where XXXXXX stands for the player's name, 
//and YYYYYY stands for the game's name.

#include<iostream>
using namespace std;

struct Player{
    char name[15];
    int currLevel;
    int points;
};

struct ComputerGame{
    char name[20];
    Player Players[30];
    int numPlayers;
};

void bestPlayer(ComputerGame *array, int n){
    int max=0;
    int maxLvl=0;
    int maxI=0;
    int maxJ=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<array->numPlayers;j++){
            if(array[i].Players[j].points>max){
                max=array[i].Players[j].points;
                maxLvl=array[i].Players[j].currLevel;
                maxI=i;
                maxJ=j;
            }else if(array[i].Players[j].points==max){
                if(array[i].Players[j].currLevel>maxLvl){
                    max=array[i].Players[j].points;
                    maxLvl=array[i].Players[j].currLevel;
                    maxI=i;
                    maxJ=j;
                }
            }
        }
    }
    cout<<"Najdobar igrac e igracot so korisnicko ime "<<array[maxI].Players[maxJ].name<<" koj ja igra igrata "<<array[maxI].name;

}

int main() {
    int n,m;
    char ime[20];
    cin>>n;
    //create an array of max 100 computer games;
    ComputerGame poleigri[100];
    for (int i=0; i<n; i++) {
        ComputerGame nova;
        cin>>nova.name>>nova.numPlayers;
        Player pole[30];
        for (int j=0; j<nova.numPlayers; j++) {
            Player nov;
            cin>>nov.name>>nov.currLevel>>nov.points;
            nova.Players[j]=nov;
        }
        poleigri[i]=nova;
    }

    bestPlayer(poleigri,n);
    return 0;
}

