//Да се креира структура Igrac во која се чуваат податоци за еден играч на компјутерската игра. 
//За играчот се чуваат информации за корисничкото име на играчот (низа од 15 знаци), 
//број на ниво до кој играчот е стигнат (цел број) и број на освоени поени (цел број) (10 поени).
//Потоа да се креирa структура KompjuterskaIgra во која се чуваат податоци за името на играта (низа од 20 знаци), 
//низа од играчи кои ја играат играта (најмногу 30) и бројот на играчи. (10 поени)
//Треба да се направи функција со потпис (15 поени)
//void najdobarIgrac(KompjuterskaIgra *lista, int n)
//Оваа функција треба да го испечати името на најдобриот играч на онаа игра која има најголема популарност 
//(ја играат наjголем број на играчи). Најдобар играч е играчот кој има најголем број на освоени поени. 
//Ако има повеќе играчи со ист максимален број на освоени поени, најдобар е играчот кој има достигнато најголемо ниво.
//Печатењето е во форматот: "Najdobar igrac e igracot so korisnicko ime XXXXX koj ja igra igrata YYYYYY". 
//(XXXXXX е корисничкото име на најдобриот играч,а YYYYY е името на играта која ја играат најголем број на играчи)
//(Забелешка: секогаш ќе има точно еден најдобар играч)
//Функционалност на задачата и дополнување на main функцијата (10 поени)

#include <iostream>
#include <cstring>
using namespace std;

struct Igrac{
    char ime[15];
    int nivo;
    int poeni;
};

struct KompjuterskaIgra{
    char ime[20];
    Igrac igraci[30];
    int brojNaIgraci;
};

void readKompjuterskaIgra(KompjuterskaIgra *k ){
    scanf("%s %d",k->ime,&k->brojNaIgraci);
}

//void printKompIgra(KompjuterskaIgra k){
//    printf("%s %d\n",k.ime,k.brojNaIgraci);
//}

void readIgrac(KompjuterskaIgra *k){
    for(int j=0;j<k->brojNaIgraci;j++){
        scanf("%s %d %d",k->igraci[j].ime,&k->igraci[j].nivo,&k->igraci[j].poeni);
    }
}
//void printIgrac(KompjuterskaIgra k){
//    for(int j=0;j<k.brojNaIgraci;j++){
//        printf("%s %d %d\n",k.igraci[j].ime,k.igraci[j].nivo,k.igraci[j].poeni);
//    }
//}

void najdobarIgrac(KompjuterskaIgra *lista, int n){
    int popular=lista[0].brojNaIgraci;
    int najI=0;
    int najdobriPoeni;
    int najJ=0;
    for(int i=1;i<n;i++){
        if(lista[i].brojNaIgraci>popular){
            popular=lista[i].brojNaIgraci;
            najI=i;
        }
    }
//    strcpy(lista[popular].igraci[0].ime,najdobar);
    najdobriPoeni=lista[najI].igraci[0].poeni;
    for(int j=0;j<lista->brojNaIgraci;j++){
        if(lista[najI].igraci[j].poeni>najdobriPoeni){
            najdobriPoeni=lista[najI].igraci[j].poeni;
            najJ=j;
        }else if(lista[najI].igraci[j].poeni==najdobriPoeni){
            if(lista[najI].igraci[j].nivo>lista[najI].igraci[najJ].nivo){
                najdobriPoeni=lista[najI].igraci[j].poeni;
                najJ=j;
            }
        }
    }
    cout<<"Najdobar igrac e igracot so korisnicko ime "<<lista[najI].igraci[najJ].ime<<" koj ja igra igrata "<<lista[najI].ime;
}

int main(){
    KompjuterskaIgra k[100];
    int brojNaKompIgri;
    scanf("%d",&brojNaKompIgri);
    for(int i=0;i<brojNaKompIgri;i++){
        readKompjuterskaIgra(&k[i]);
//        printKompIgra(k[i]);
        readIgrac(&k[i]);
//        printIgrac(k[i]);
    }

    najdobarIgrac(k,brojNaKompIgri);
}
