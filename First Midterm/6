//Да се креира структура Воз во која се чуваат податоци за релацијата по која се движи возот (низа од најмногу 50 знаци), 
//предвиден бројот на километри што треба да се поминат (реален број), како и бројот на патници во возот (цел број).
//Потоа да се креирa структура ZeleznickaStanica во која се чуваат податоци за градот во кој се наоѓа (низа од 20 знаци), 
//низа од возови што поаѓаат од станицата (најмногу 30) и бројот на возови (цел број).
//Треба да се направи функција со потпис
//void najkratkaRelacija(ZeleznickaStanica* zs, int n, char* grad)
//во која се печати релацијата и бројот на километри на возот што поминува најкратка релација (најмалку километри), 
//а поаѓа од железничката станица од градот што се проследува како влезен аргумент. 
//Ако има повеќе возови со ист најмал број на километри, да се испечати релацијата на последниот таков.

#include<iostream>
#include <cstring>
using namespace std;

struct voz{
    char relacija[51];
    float predvideniKm;
    int brojNaPatnici;
};

struct ZeleznickaStanica{
    char grad1[21];
    voz vozovi[30];
    int brNaVozovi;
};

void najkratkaRelacija(ZeleznickaStanica* zs, int n, char* grad) {
    int targetZs;
    int minPtr = 0;
    for (int i = 0; i < n; i++) {
        if (strcmp(zs[i].grad1, grad) == 0) {
            targetZs = i;

            int minVal = zs[targetZs].vozovi[0].predvideniKm;
            for (int j = 0; j < zs[i].brNaVozovi; j++) {
                if (zs[targetZs].vozovi[j].predvideniKm <= minVal) {
                    minVal = zs[targetZs].vozovi[j].predvideniKm;
                    minPtr = j;
                }
            }
            cout << "Najkratka relacija: " << zs[targetZs].vozovi[minPtr].relacija << " " << "(" <<
                 zs[targetZs].vozovi[minPtr].predvideniKm << " km)" << endl;
        }
    }
}

int main(){

    int n;
    cin>>n; //se cita brojot na zelezlnichki stanici

    ZeleznickaStanica zStanica[100];
    for (int i=0;i<n;i++){
        //se citaat infomracii za n zelezlnichkite stanici i se zacuvuvaat vo poleto zStanica
        cin>>zStanica[i].grad1;
        cin>>zStanica[i].brNaVozovi;
        for(int j = 0; j < zStanica[i].brNaVozovi; j++){
            cin>>zStanica[i].vozovi[j].relacija;
            cin>>zStanica[i].vozovi[j].predvideniKm;
            cin>>zStanica[i].vozovi[j].brojNaPatnici;
        }
    }

    char grad[25];
    cin>>grad;

    najkratkaRelacija(zStanica,n,grad);
    return 0;
}

